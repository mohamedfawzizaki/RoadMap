# -----------------------------------------------------------------------------
# Kubernetes ServiceAccount
#
# A ServiceAccount is used by Pods to authenticate with the Kubernetes API
# and other in-cluster services, instead of using human user credentials.
#
# Fields:
# - metadata.name: Name of the ServiceAccount
# - metadata.namespace: Namespace for this SA
# - automountServiceAccountToken: Whether to automatically mount the API token into pods using this SA
# - imagePullSecrets: List of Secrets to use for pulling images from private registries
# - secrets: (deprecated) List of Secrets allowed to be mounted by pods (enforced only with annotation)
#
# Docs: https://kubernetes.io/docs/concepts/security/service-accounts/
# -----------------------------------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-serviceaccount            # 🔖 Logical identifier for the ServiceAccount
  namespace: default                  # 📛 Namespace scope

automountServiceAccountToken: true    # 🔐 Automatically mounts API token into pods unless overridden in pod spec

imagePullSecrets:                     # 🔑 Used to pull images from private registries
  - name: regcred                     #    Secret of type kubernetes.io/dockerconfigjson must exist in the same namespace

secrets:                              # ⚠️ (Deprecated) List of Secrets the SA allows to be mounted
  - name: app-custom-secret           #    Only enforced if annotation "kubernetes.io/enforce-mountable-secrets" = "true"




















---
# -------------------------------------------------------------------------------
# 📌 ServiceAccount Definition
# -------------------------------------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-serviceaccount
  namespace: default
automountServiceAccountToken: true
imagePullSecrets:
  - name: regcred  # 🔐 Secret for private Docker registry login (must exist)

---
# -------------------------------------------------------------------------------
# 🔐 Docker Registry Secret (e.g., for DockerHub, GitLab, etc.)
# NOTE: Create with:
# kubectl create secret docker-registry regcred \
#   --docker-username=your-username \
#   --docker-password=your-password \
#   --docker-email=you@example.com \
#   --docker-server=https://index.docker.io/v1/ \
#   --namespace=default
# -------------------------------------------------------------------------------

# (Optional - generated via CLI, not manifest typically)

---
# -------------------------------------------------------------------------------
# 🔒 Role: Read-only access to pods in the namespace
# -------------------------------------------------------------------------------
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: pod-reader
#   namespace: default
# rules:
#   - apiGroups: [""]
#     resources: ["pods"]
#     verbs: ["get", "list", "watch"]

---
# -------------------------------------------------------------------------------
# 🔗 RoleBinding: Binds the ServiceAccount to the Role
# -------------------------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: app-serviceaccount
    namespace: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io

---
# -------------------------------------------------------------------------------
# 🐳 Pod using the ServiceAccount
# -------------------------------------------------------------------------------
# apiVersion: v1
# kind: Pod
# metadata:
#   name: app-pod
# spec:
#   serviceAccountName: app-serviceaccount  # 🔗 Uses the defined ServiceAccount
#   containers:
#     - name: my-container
#       image: your-private-image:latest     # 🎯 Pulled using regcred secret
#       imagePullPolicy: Always
