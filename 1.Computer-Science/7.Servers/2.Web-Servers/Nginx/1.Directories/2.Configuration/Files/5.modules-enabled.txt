_______________________________________________________________________________________________________________________________________
                                üîπ Understanding `/etc/nginx/modules-enabled/` Directory  

 1Ô∏è‚É£ What is `/etc/nginx/modules-enabled/`?  
The `/etc/nginx/modules-enabled/` directory is used in Debian-based distributions
 (such as Ubuntu) to manage dynamically loaded modules for Nginx. 
 
It contains symbolic links to the actual module configuration files stored in `/etc/nginx/modules-available/`.

üîπ Purpose:  
- Allows enabling or disabling dynamic Nginx modules easily.  
- Uses symlinks instead of modifying the main `nginx.conf`.  
- Helps manage extra functionalities like security, caching, rate limiting, and authentication.  

_______________________________________________________________________________________________________________________________________

 2Ô∏è‚É£ How Nginx Loads Modules
By default, Nginx only includes modules specified in the `load_module` directive. 
The `modules-enabled` directory is typically included in `nginx.conf`:
````````````````````````````````````````````````````````````````````nginx
include /etc/nginx/modules-enabled/*.conf;
````````````````````````````````````````````````````````````````````
This means all `.conf` files inside `/etc/nginx/modules-enabled/` will be loaded automatically when Nginx starts.

_______________________________________________________________________________________________________________________________________

 3Ô∏è‚É£ Directory Structure
A typical Nginx module setup:
````````````````````````````````````````````````````````````````````
/etc/nginx/
‚îú‚îÄ‚îÄ nginx.conf               # Main Nginx configuration
‚îú‚îÄ‚îÄ modules-available/       # Stores all module configuration files
‚îÇ   ‚îú‚îÄ‚îÄ 50-mod-http-geoip.conf
‚îÇ   ‚îú‚îÄ‚îÄ 50-mod-http-headers-more.conf
‚îÇ   ‚îú‚îÄ‚îÄ 50-mod-stream.conf
‚îÇ
‚îú‚îÄ‚îÄ modules-enabled/         # Contains only enabled modules (symlinks to modules-available)
‚îÇ   ‚îú‚îÄ‚îÄ 50-mod-http-geoip.conf        -> /etc/nginx/modules-available/50-mod-http-geoip.conf
‚îÇ   ‚îú‚îÄ‚îÄ 50-mod-http-headers-more.conf -> /etc/nginx/modules-available/50-mod-http-headers-more.conf
‚îÇ
‚îî‚îÄ‚îÄ conf.d/                  # Stores general settings (gzip, proxy, security, etc.)
````````````````````````````````````````````````````````````````````

_______________________________________________________________________________________________________________________________________

 4Ô∏è‚É£ Common Nginx Modules
| Module                          | Purpose 
| `ngx_http_geoip_module`         | Enables GeoIP-based access control. 
| `ngx_http_ssl_module`           | Enables SSL/TLS support. 
| `ngx_http_headers_more_module`  | Allows modifying HTTP headers. 
| `ngx_http_vhost_traffic_status` | Provides detailed traffic stats for virtual hosts. 
| `ngx_stream_module`             | Enables TCP/UDP load balancing. 

_______________________________________________________________________________________________________________________________________

 5Ô∏è‚É£ Example: Loading a Module (`geoip`)
A module configuration file in `/etc/nginx/modules-available/50-mod-http-geoip.conf`:
````````````````````````````````````````````````````````````````````nginx
load_module modules/ngx_http_geoip_module.so;
````````````````````````````````````````````````````````````````````
üîπ Steps to enable the module:  
````````````````````````````````````````````````````````````````````bash
sudo ln -s /etc/nginx/modules-available/50-mod-http-geoip.conf /etc/nginx/modules-enabled/
sudo systemctl reload nginx
````````````````````````````````````````````````````````````````````

üîπ Steps to disable the module:  
````````````````````````````````````````````````````````````````````bash
sudo rm /etc/nginx/modules-enabled/50-mod-http-geoip.conf
sudo systemctl reload nginx
````````````````````````````````````````````````````````````````````

_______________________________________________________________________________________________________________________________________

 6Ô∏è‚É£ Checking Available Modules
To list all built-in and dynamically loaded modules:  
````````````````````````````````````````````````````````````````````bash
nginx -V 2>&1 | grep 'modules'
````````````````````````````````````````````````````````````````````
or  
````````````````````````````````````````````````````````````````````bash
nginx -V
````````````````````````````````````````````````````````````````````
Look for `--with-` (built-in) and `--add-dynamic-module=` (dynamically loaded).

_______________________________________________________________________________________________________________________________________

 7Ô∏è‚É£ Troubleshooting
| Issue                                                         | Possible Cause                    | Solution 
| `nginx: [emerg] module not found`                             | Module file is missing.           | Ensure the `.so` file exists in `/usr/lib/nginx/modules/`. 
| `nginx: [emerg] unknown directive "load_module"`              | Using an old Nginx version.       | Upgrade to Nginx 1.9.11+ (`sudo apt update && sudo apt upgrade`). 
| `403 Forbidden` | GeoIP module blocks access.                 | Adjust GeoIP rules in `geoip.conf`|

_______________________________________________________________________________________________________________________________________

 8Ô∏è‚É£ Summary
- `/etc/nginx/modules-available/` contains all available modules.
- `/etc/nginx/modules-enabled/` contains only enabled modules (symlinks).
- Use `load_module` inside `.conf` files to activate modules.
- Reload Nginx (`systemctl reload nginx`) after enabling or disabling modules.

_______________________________________________________________________________________________________________________________________