_______________________________________________________________________________________________________________________________________
                                        üîπ Understanding `/var/log/nginx/` Directory  

 1Ô∏è‚É£ What is `/var/log/nginx/`?  
The `/var/log/nginx/` directory contains log files that store important information about Nginx‚Äôs operation,
 including access requests, errors, and debugging data.

üìå Location:  
````````````````````````````````````````````````````````````````````bash
cd /var/log/nginx/
````````````````````````````````````````````````````````````````````

üìå Listing Log Files:  
````````````````````````````````````````````````````````````````````bash
ls -la /var/log/nginx/
````````````````````````````````````````````````````````````````````

_______________________________________________________________________________________________________________________________________

 2Ô∏è‚É£ Common Log Files in `/var/log/nginx/`
| Log File            | Description 
| `access.log`        | Logs all HTTP requests received by Nginx. 
| `error.log`         | Logs errors and warnings encountered by Nginx. 
| `ssl_access.log`    | Logs HTTPS (SSL/TLS) requests. 
| `ssl_error.log`     | Logs SSL/TLS-related errors. 
| `proxy_access.log`  | Logs requests forwarded to a backend server (if proxying is used). 
| `proxy_error.log`   | Logs errors from the proxy_pass directive. 

_______________________________________________________________________________________________________________________________________

 3Ô∏è‚É£ Viewing Nginx Logs in Real-Time
To monitor logs in real-time (useful for debugging), use `tail -f`:

üìå Monitor Access Logs:  
````````````````````````````````````````````````````````````````````bash
sudo tail -f /var/log/nginx/access.log
````````````````````````````````````````````````````````````````````

üìå Monitor Error Logs:  
````````````````````````````````````````````````````````````````````bash
sudo tail -f /var/log/nginx/error.log
````````````````````````````````````````````````````````````````````

üìå Monitor Both at Once:  
````````````````````````````````````````````````````````````````````bash
sudo tail -f /var/log/nginx/access.log /var/log/nginx/error.log
````````````````````````````````````````````````````````````````````

_______________________________________________________________________________________________________________________________________

 4Ô∏è‚É£ Understanding Log Formats
# üìå Default Access Log Format
Nginx logs HTTP requests in a predefined format:
````````````````````````````````````````````````````````````````````
192.168.1.1 - - [25/Mar/2025:14:00:02 +0000] "GET /index.html HTTP/1.1" 200 512 "-" "Mozilla/5.0"
````````````````````````````````````````````````````````````````````
| Field                             | Description ient IP address. 
| `192.168.1.1`                     | Cl
| `- -`                             | User identity and authentication info (often empty). 
| `[25/Mar/2025:14:00:02 +0000]`    | Timestamp of the request. 
| `"GET /index.html HTTP/1.1"`      | Request method, path, and HTTP version. 
| `200`                             | HTTP status code (e.g., `200 OK`, `404 Not Found`). 
| `512`                             | Size of response in bytes. 
| `"-"`                             | Referrer (if any). 
| `"Mozilla/5.0"`                   | User-Agent (browser info). 

üìå Custom Log Format (Example)  
You can define a custom log format in Nginx:
````````````````````````````````````````````````````````````````````nginx
log_format custom_format '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent"';
access_log /var/log/nginx/access.log custom_format;
````````````````````````````````````````````````````````````````````

_______________________________________________________________________________________________________________________________________

 5Ô∏è‚É£ Clearing Nginx Logs
If logs grow too large, you can clear them without stopping Nginx:

üìå Clear Access Log:  
````````````````````````````````````````````````````````````````````bash
sudo truncate -s 0 /var/log/nginx/access.log
````````````````````````````````````````````````````````````````````

üìå Clear Error Log:  
````````````````````````````````````````````````````````````````````bash
sudo truncate -s 0 /var/log/nginx/error.log
````````````````````````````````````````````````````````````````````

üìå Clear All Logs:  
````````````````````````````````````````````````````````````````````bash
sudo rm -rf /var/log/nginx/
sudo systemctl restart nginx
````````````````````````````````````````````````````````````````````

_______________________________________________________________________________________________________________________________________

 6Ô∏è‚É£ Log Rotation (`logrotate`)
To prevent logs from consuming too much disk space, Nginx uses `logrotate` for automatic log rotation.

üìå Nginx Log Rotation Config (`/etc/logrotate.d/nginx`)
````````````````````````````````````````````````````````````````````plaintext
/var/log/nginx/.log {
    daily
    missingok
    rotate 14
    compress
    delaycompress
    notifempty
    create 0640 www-data adm
    sharedscripts
    postrotate
        [ -f /var/run/nginx.pid ] && kill -USR1 $(cat /var/run/nginx.pid)
    endscript
}
````````````````````````````````````````````````````````````````````
‚úÖ Key Settings:
- `daily` ‚Üí Rotates logs every day.
- `rotate 14` ‚Üí Keeps logs for 14 days.
- `compress` ‚Üí Compresses old logs.
- `postrotate` ‚Üí Reloads Nginx to start fresh logs.

üìå Force Log Rotation Manually:
````````````````````````````````````````````````````````````````````bash
sudo logrotate -f /etc/logrotate.d/nginx
````````````````````````````````````````````````````````````````````

_______________________________________________________________________________________________________________________________________

 7Ô∏è‚É£ Summary
- `/var/log/nginx/` contains access and error logs.
- `access.log` records HTTP requests, while `error.log` records Nginx errors.
- Use `tail -f` to monitor logs in real-time.
- Logs can be cleared using `truncate -s 0`.
- Log rotation is managed by `logrotate`.

_______________________________________________________________________________________________________________________________________