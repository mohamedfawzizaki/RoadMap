_____________________________________________________________________________________________________________________________________
                                                        2. Scaling

Scaling refers to the ability to increase or decrease system
 resources (servers, storage, etc.) to accommodate varying traffic loads. 

There are two types of scaling:
-------------------------------------------------------------------------------------------
 a. Horizontal Scaling (Scaling Out/In)
 
- Definition: 
        - Adding more servers to handle increased traffic (scaling out) or removing servers when traffic decreases (scaling in).
- Benefits: 
        - It is more flexible and cost-efficient since you can add or remove resources based on demand.
- Challenges: 
        - Requires load balancing, managing state, and maintaining consistency across servers.

Example: 
    - If traffic increases, you can add more backend web servers to
      handle the load and distribute traffic evenly using a load balancer.

-------------------------------------------------------------------------------------------
 b. Vertical Scaling (Scaling Up/Down)

- Definition: 
        - Increasing the power (CPU, RAM) of an existing server (scaling up) or reducing it (scaling down).
- Benefits: 
        - Simple to implement and does not require adding extra infrastructure.
- Challenges: 
        - There are limits to how much you can scale a single server. 
        - It can be costly and inefficient for certain types of workloads.

Example: Upgrading a server from 4GB of RAM to 8GB or replacing it with a more powerful machine.

_____________________________________________________________________________________________________________________________________
                                                  Manual-Scaling

_____________________________________________________________________________________________________________________________________
                                                   Auto-Scaling

- Definition: 
        - Automatically adjusting the number of resources based on real-time traffic demand. 
        - It is common in cloud environments like AWS, Google Cloud, and Azure.
- Benefits: 
        - It can automatically scale resources up or down based on predefined metrics (e.g., CPU usage, traffic volume).
- Challenges: 
        - Requires integration with cloud services, and careful configuration to avoid scaling too quickly or too slowly.

Example: 
        - AWS Elastic Load Balancing can automatically scale the number of EC2 instances in response to traffic spikes.
_____________________________________________________________________________________________________________________________________
