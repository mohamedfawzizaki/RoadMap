_________________________________________________________________________________________________________________________________
                                              Device Management
                                              ----------------
Definition:
       - Device management is a critical function of an operating system (OS)
          responsible for controlling, coordinating, and interacting with hardware devices connected to the computer.
       - This includes input/output (I/O) devices like keyboards, mice, printers, 
          and storage devices, as well as network interfaces and other peripherals.
_________________________________________________________________________________________________________________________________
                                        Key Objectives of Device Management
                                        -----------------------------------
1.Device Allocation:
       - Assign devices to processes as needed.
       - Ensure efficient use of devices.
       - Avoid conflicts between processes trying to access the same device.
--------------------------------------------------------------------------------------------------------------
2.Device Control:
       - Translate high-level commands into device-specific operations.
       - Communicate with hardware through drivers.
--------------------------------------------------------------------------------------------------------------
3.Device Independence:
       - Provide a uniform interface for applications, irrespective of device-specific details.
--------------------------------------------------------------------------------------------------------------
4.Error Handling:
       - Detect and recover from hardware or communication errors.
--------------------------------------------------------------------------------------------------------------
5.Security and Access Control:
       - Prevent unauthorized access to devices.
       - Enforce permissions and restrictions.
_________________________________________________________________________________________________________________________________
                                        Components of Device Management
                                        -------------------------------
1.Device Drivers:
       - Software modules that abstract hardware complexities.
       - Act as an intermediary between the OS and hardware.
       - Translate OS commands into device-specific instructions.
       - Handle device interrupts and I/O operations.
--------------------------------------------------------------------------------------------------------------
2.I/O Controllers:
       - Hardware components that manage communication between the CPU and devices.
       - Contain registers for data transfer, command execution, and status monitoring.
--------------------------------------------------------------------------------------------------------------
3.Device Interface:
       - Provides a standardized way for applications to interact with devices (e.g., file-like interfaces for storage devices).
--------------------------------------------------------------------------------------------------------------
4.Device Tables:
       - Maintain information about connected devices, such as their type, status, and assigned processes.
_________________________________________________________________________________________________________________________________
                                             Device Types
                                          ------------------ 
Devices can be classified into the following categories:
--------------------------------------------------------------------------------------------------------------
1.Character Devices:
       - Handle data one character at a time.
       - Examples: Keyboards, mice, serial ports.
       - Interfaced using character device drivers.
--------------------------------------------------------------------------------------------------------------
2.Block Devices:
       - Transfer data in fixed-size blocks.
       - Examples: Hard drives, SSDs, optical disks.
       - Support random access.
--------------------------------------------------------------------------------------------------------------
3.Network Devices:
       - Facilitate data transfer over networks.
       - Examples: Network interface cards (NICs), Wi-Fi adapters.
--------------------------------------------------------------------------------------------------------------
4.Virtual Devices:
       - Emulated devices that don't correspond to physical hardware.
       - Examples: Virtual network interfaces, RAM disks.
       - Maintain information about connected devices, such as their type, status, and assigned processes.
_________________________________________________________________________________________________________________________________
                                        Device Management Techniques
                                        ---------------------------- 
1.Buffering:
       - Temporarily stores data in memory during I/O operations.
       - Handles differences in speed between the CPU and devices.
--------------------------------------------------------------------------------------------------------------
2.Caching:
       - Stores frequently accessed data in fast memory to improve performance.
--------------------------------------------------------------------------------------------------------------
3.Spooling:
       - Used for devices like printers that handle one task at a time.
       - Stores jobs in a queue for sequential processing.
--------------------------------------------------------------------------------------------------------------
4.Polling:
       - The OS repeatedly checks the device's status.
       - Inefficient for high-speed devices.
--------------------------------------------------------------------------------------------------------------
5.Interrupts:
       - Devices signal the CPU when they are ready to transfer data.
       - Efficient and widely used in modern systems.
--------------------------------------------------------------------------------------------------------------
6.Direct Memory Access (DMA):
       - Allows devices to transfer data directly to/from memory without involving the CPU.
_________________________________________________________________________________________________________________________________
                                       Device Management in Operating Systems
                                       --------------------------------------
1.Unix/Linux:
       - Devices are represented as files in `/dev` (e.g., `/dev/sda` for disks, `/dev/tty` for terminals).
       - Uses commands like `lsblk`, `mount`, `umount`, `chmod`, and `chown` for device management.
       - Supports `udev` for dynamic device management.
--------------------------------------------------------------------------------------------------------------
2.Windows:
       - Devices managed through the Device Manager (GUI).
       - Uses device drivers stored in the Windows Driver Store.
       - Tools like `diskmgmt.msc` for storage devices and `devmgmt.msc` for device overview.
_________________________________________________________________________________________________________________________________
                                             Device Scheduling
                                       ---------------------------- 
for shared devices, the OS uses scheduling algorithms to determine which process gets access:
--------------------------------------------------------------------------------------------------------------
1.First Come First Serve (FCFS):
       - Simple but may cause delays for time-critical tasks.
--------------------------------------------------------------------------------------------------------------
2.Priority-Based Scheduling:
       - Assigns higher priority to critical processes.
--------------------------------------------------------------------------------------------------------------
3.Round Robin:
       - Allocates time slices for processes in a cyclic manner.
--------------------------------------------------------------------------------------------------------------
4.I/O Scheduling for Storage Devices:
       - Shortest Seek Time First (SSTF):
         - Minimizes seek time by serving the nearest request.
       - Elevator (SCAN):
         - Moves the disk arm in one direction, serving requests, then reverses.
_________________________________________________________________________________________________________________________________
                                       Device Management Challenges
                                       ---------------------------- 
1.Device Compatibility:
       - Ensuring the OS can work with a wide range of devices.
--------------------------------------------------------------------------------------------------------------
2.Concurrency:
       - Managing multiple processes accessing the same device.
--------------------------------------------------------------------------------------------------------------
3.Error Handling:
       - Detecting and recovering from hardware failures.
--------------------------------------------------------------------------------------------------------------
4.Performance Optimization:
       - Minimizing latency and maximizing throughput.
--------------------------------------------------------------------------------------------------------------
5.Security:
       - Preventing unauthorized access to sensitive devices.
--------------------------------------------------------------------------------------------------------------
6.Hot Swapping:
       - Supporting dynamic connection and disconnection of devices without rebooting.
_________________________________________________________________________________________________________________________________
                                    Device Management Commands and Tools
                                    ------------------------------------ 
Linux Commands:
    - `lsblk`: List information about block devices.
    - `lscpu`: Display CPU architecture details.
    - `lsusb`: List USB devices.
    - `lspci`: List PCI devices.
    - `df -h`: Show disk space usage.
    - `mount`/`umount`: Mount/unmount file systems.
    - `udevadm`: Manage device events and rules.
--------------------------------------------------------------------------------------------------------------
Windows Tools:
    - Device Manager : GUI to manage device drivers and settings.
    - Disk Management: GUI tool to partition and format drives.
    - `driverquery`  : CLI to list installed drivers.
    - `wmic`         : Query system devices and components.
_________________________________________________________________________________________________________________________________