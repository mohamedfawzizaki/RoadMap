______________________________________________________________________________________________________________________________________
                                            `/init/`, `/run/`, `/opt/`, and `/proc/` 
                                            ========================================
---------------------------------------------------------------------------------------------------------
                                                      `/init/` Directory
                                                      ==================

- Purpose: 
      - The `/init/` directory typically does not exist in most Linux distributions as a standalone directory.
      - However, it is often associated with the init system that is used to initialize the system during boot.
- Related to: 
      - The init process, which is the first process started by the kernel.
      - It's responsible for starting all other processes and services required for the system to function.
  
  In some cases, `/init` is used as a symlink to the init process binary (`/sbin/init`) 
  or is directly tied to initrd (initial RAM disk) files during the boot process.

______________________________________________________________________________________________________________________________________
                                                        `/run/` Directory
                                                        ==================

- Purpose: 
      - The `/run/` directory is used to store volatile runtime data that is 
        needed during the system’s operation but doesn't need to persist after a reboot.
      - It is typically used for storing system information such as PID files, lock files, and temporary service-related files.
- Typical Contents:
      - `/run/lock/`: 
              - Stores lock files used by the system to ensure that only one instance of a program or service runs at a time.
      - `/run/user/`: 
              - Contains runtime files for specific users, such as user-specific temporary files and directories used by active sessions.
      - `/run/systemd/`: 
          - Contains runtime data used by the systemd init system (if the system uses it), such as information about system services.

- Example Usage: Temporary information for running services,
                 such as `/run/dbus/system_bus_socket` (a socket file for DBus).

- Note: `/run/` was introduced to replace `/var/run/` and `/var/lock/` to make these
         directories part of `tmpfs` (temporary filesystem) for faster access during runtime.
______________________________________________________________________________________________________________________________________
                                                          `/opt/` Directory
                                                          =================

- Purpose: 
      - The `/opt/` directory is intended to hold optional or
        third-party software that is not part of the core operating system.
      - Applications installed in `/opt/` are typically self-contained packages 
        or commercial software that require a separate directory.
  
- Unlike the standard software directories like `/usr/`, `/opt/` is often used for
  software that isn't maintained by the system package manager (e.g., third-party proprietary applications).

- Typical Contents:
  - Applications or software installed from vendors outside of the distribution’s package management system.
  - Subdirectories under `/opt/` often follow a pattern: each software package 
    might have its own directory, like `/opt/google/` for Google applications or `/opt/pycharm/` for PyCharm IDE.

- Example Usage: You might find large software suites, proprietary software, or
                 applications that are downloaded and manually installed by users.
______________________________________________________________________________________________________________________________________
                                                          `/proc/` Directory
                                                          ==================

- Purpose: 
      - The `/proc/` directory is a virtual filesystem that provides an interface to kernel data structures.
      - It contains real-time information about the system, processes, and hardware.
  
- Unlike normal directories, `/proc/` doesn't contain regular files; it holds virtual files
  that represent system and process information.

- Typical Contents:
  - `/proc/cpuinfo`: 
        - Provides details about the CPU, including the model, cores, and architecture.
  - `/proc/meminfo`: 
        - Provides information about system memory usage.
  - `/proc/uptime`: 
        - Shows the uptime of the system.
  - `/proc/[pid]/`: 
        - Contains directories for each running process (where `[pid]` is the process ID).
        - Inside each of these directories, you’ll find information about the process,
          such as memory usage, status, and open file descriptors.
  - `/proc/sys/`: 
        - Allows the kernel parameters to be modified at runtime.For example, 
          `/proc/sys/net/ipv4/ip_forward` controls IP forwarding.

- Example Usage: To view the system’s total memory usage, you would use:
  ```bash
  cat /proc/meminfo
  ```

  Or to check the processes running on the system, you might look in `/proc/[pid]/status` 
  to examine the status of a particular process.
______________________________________________________________________________________________________________________________________
                              Summary of `/init/`, `/run/`, `/opt/`, and `/proc/` Directories
                              ===============================================================

1.`/init/`: 
      - Generally not used as a standalone directory but is associated with the init process and system initialization.
   
2.`/run/`: 
      - Stores runtime data, such as lock files, PID files, and service-related information.
      - Data in `/run/` is temporary and does not persist after reboot.

3.`/opt/`: 
      - Contains optional software and third-party applications that are not part of the core OS.
      - It’s typically used for proprietary applications and self-contained software.

4.`/proc/`: 
      - A virtual filesystem that provides detailed information about the system, hardware, processes, and kernel.
      - It allows the system to expose internal data structures to the user.
______________________________________________________________________________________________________________________________________
