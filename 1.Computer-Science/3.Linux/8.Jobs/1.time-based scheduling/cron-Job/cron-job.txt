_________________________________________________________________________________________________________________________________________________________________________
                                                    Cron Job
                                              ===================   
A cron job is a scheduled task that runs automatically at specified intervals on a Unix-like system.
The cron daemon (`crond`) handles the execution of these tasks based on rules specified in the crontab (cron table) file.
Cron jobs are commonly used for system maintenance, backups, monitoring, and automation.

_________________________________________________________________________________________________________________________________________________________________________
                                            1.Components of Cron Jobs
                                            =========================
a.The Cron Daemon (`crond`)

The `cron` daemon is a background service that
 checks the crontab files and runs the scheduled tasks accordingly.

- To check if `crond` is running:
        ```````````````````````````````````````bash
        sudo systemctl status cron
        ```````````````````````````````````````

- To start or enable the `cron` service:
        ```````````````````````````````````````bash
        sudo systemctl start cron
        sudo systemctl enable cron
        ```````````````````````````````````````
-------------------------------------------------------------------------------------------------------------------------------
b.Crontab Files

There are two types of crontab files:

1.User Crontab Files:  
        - Each user can have their own crontab file to schedule jobs.
        - These are managed using the `crontab` command.
        - The actual user crontab is stored in /var/spool/cron/crontabs/<username>, not in your home directory.
   
2.System-Wide Crontab File:  
        - Located at `/etc/crontab`, it can be used by the system administrator to schedule tasks for various users.

_________________________________________________________________________________________________________________________________________________________________________
                                                    2.Cron Job Syntax
                                                    =================

A cron job consists of five time fields, followed by the command to be executed.

        ```````````````````````````````````````bash
        * * * * * /path/to/command
        - - - - -
        | | | | |
        | | | | +---- Day of the week (0–7, where both 0 and 7 = Sunday)
        | | | +------ Month (1–12)
        | | +-------- Day of the month (1–31)
        | +---------- Hour (0–23)
        +------------ Minute (0–59)
        ```````````````````````````````````````
_________________________________________________________________________________________________________________________________________________________________________
                                                 3.Special Time Strings
                                                 ======================

Cron also supports special strings for common time intervals:
 ___________________________________________________________________________________________________________
| Special String             |        Equivalent               | Description                                |
|____________________________|_________________________________|____________________________________________|
| `@reboot`                  | Runs once at system startup     | On system boot                             |
| `@yearly` (or `@annually`) | `0 0 1 1 *`                     | Once a year, at midnight on January 1      |
| `@monthly`                 | `0 0 1 * *`                     | Once a month, at midnight on the first day |
| `@weekly`                  | `0 0 * * 0`                     | Once a week, at midnight on Sunday         |
| `@daily` (or `@midnight`)  | `0 0 * * *`                     | Once a day, at midnight                    |
| `@hourly`                  | `0 * * * *`                     | Once an hour, at the start of the hour     |
|____________________________|_________________________________|____________________________________________|

_________________________________________________________________________________________________________________________________________________________________________
                                                4.Common Cron Job Examples
                                                ==========================

a.Run a Script Every Day at 5 AM
                                ```````````````````````````````````````bash
                                0 5 * * * /path/to/script.sh
                                ```````````````````````````````````````

b.Run a Backup Script Every Sunday at Midnight
                                ```````````````````````````````````````bash
                                0 0 * * 0 /path/to/backup.sh
                                ```````````````````````````````````````

c.Run a Cleanup Command Every Hour
                                ```````````````````````````````````````bash
                                0 * * * * /path/to/cleanup.sh
                                ```````````````````````````````````````

d.Run a Command Every 10 Minutes
                                ```````````````````````````````````````bash
                                */10 * * * * /path/to/command.sh
                                ```````````````````````````````````````

e.Run a Task at System Boot
                                ```````````````````````````````````````bash
                                @reboot /path/to/startup-task.sh
                                ```````````````````````````````````````

_________________________________________________________________________________________________________________________________________________________________________
                                                5.Managing Cron Jobs
                                                ====================

a.Listing Cron Jobs
                                To view the cron jobs for the current user:
                                ```````````````````````````````````````bash
                                crontab -l
                                ```````````````````````````````````````

b.Editing Cron Jobs
                                To add or modify cron jobs for the current user:
                                ```````````````````````````````````````bash
                                crontab -e
                                ```````````````````````````````````````
                                This opens the user’s crontab file in the default text editor (usually `nano` or `vi`).

c.Removing Cron Jobs
                                To remove all cron jobs for the current user:
                                ```````````````````````````````````````bash
                                crontab -r
                                ```````````````````````````````````````

d.Using a Specific Editor for Crontab
                                You can set a preferred editor by using the `EDITOR` environment variable:
                                ```````````````````````````````````````bash
                                EDITOR=vim crontab -e
                                ```````````````````````````````````````

_________________________________________________________________________________________________________________________________________________________________________
                                           6.System-Wide Cron Jobs
                                           =======================
Files:
        /etc/crontab
        /etc/cron.d/*

The system-wide crontab file (`/etc/crontab`) contains an extra user field before the command:

                ```````````````````````````````````````bash
                * * * * * user /path/to/command
                ```````````````````````````````````````

Example:
                ```````````````````````````````````````bash
                0 1 * * * root /usr/bin/apt update
                ```````````````````````````````````````

Additionally, scripts placed in the following 
directories will be executed at specific intervals:

                - `/etc/cron.hourly/`  – Every hour
                - `/etc/cron.daily/`   – Every day
                - `/etc/cron.weekly/`  – Every week
                - `/etc/cron.monthly/` – Every month

_________________________________________________________________________________________________________________________________________________________________________
                                        7.Log and Debug Cron Jobs
                                        =========================

a.Logging Output
                Cron jobs do not display output on the terminal.
                To log output to a file, use redirection:

                ```````````````````````````````````````bash
                0 5 * * * /path/to/script.sh >> /var/log/script.log 2>&1
                ```````````````````````````````````````

                - `>>`: Appends standard output to `script.log`
                - `2>&1`: Redirects standard error to standard output, ensuring both are logged

b.Checking Cron Logs
                On most systems, cron logs are available in `/var/log/syslog`.
                To filter cron-related messages:

                ```````````````````````````````````````bash
                grep CRON /var/log/syslog
                ```````````````````````````````````````

_________________________________________________________________________________________________________________________________________________________________________
                                     8.Environment Variables in Crontab
                                     ==================================

Environment variables can be set at the top of a crontab file:

                ```````````````````````````````````````bash
                MAILTO=user@example.com
                PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
                ```````````````````````````````````````

                - `MAILTO`: Sends the output of the cron job to the specified email address.
                - `PATH`  : Specifies the environment path for the cron jobs.
                - This is important because cron jobs run with a minimal default environment.

_________________________________________________________________________________________________________________________________________________________________________
                                        9.Permissions for Cron Jobs
                                        ===========================

User Permissions:
                - The files `/etc/cron.allow` and `/etc/cron.deny` control which users can use `cron`.
                - If `/etc/cron.allow` exists, only users listed in it can use `cron`.
                - If `/etc/cron.allow` does not exist but `/etc/cron.deny` exists,
                  all users except those listed in `/etc/cron.deny` can use `cron`.

_________________________________________________________________________________________________________________________________________________________________________
                                            10.Summary Table
                                            =================
                 _______________________________________________________________________________________
                |     Command                   | Description                                           |
                |_______________________________|_______________________________________________________|
                | `crontab -e`                  | Edit the current user's crontab file.                 |
                | `crontab -l`                  | List the current user's cron jobs                     |
                | `crontab -r`                  | Remove the current user's crontab file.               |
                | `crontab -i -r`	        | Prompt before removing the crontab (use with -r).     |
                | `sudo crontab -u username -e` | Manage the crontab of a specific user (requires sudo).|
                |_______________________________|_______________________________________________________|
                | `sudo systemctl start cron`   | Start the cron daemon                                 |
                | `sudo systemctl enable cron`  | Enable the cron daemon at boot                        |
                | `grep CRON /var/log/syslog`   | View cron job logs                                    |
                |_______________________________|_______________________________________________________|

_________________________________________________________________________________________________________________________________________________________________________
